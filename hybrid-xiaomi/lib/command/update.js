"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function checkVersion(){var e={cur:"",toolkit:"",res:0},r=void 0,t=_path2.default.join(curDir,"package.json");_fsExtra2.default.existsSync(t)&&(r=JSON.parse(_fsExtra2.default.readFileSync(t).toString()),e.cur=r.subversion&&r.subversion.toolkit||""),""===e.cur&&(e.res=1);var a=_path2.default.join(toolkitDir,"package.json");return _fsExtra2.default.existsSync(a)&&(r=JSON.parse(_fsExtra2.default.readFileSync(a).toString()),e.toolkit=r.version||""),""===e.toolkit?(console.log("### App Toolkit ### 当前toolkit的文件错误, 无法升级, 请重新安装后再升级"),e.res=-1,e):(1!==e.res&&(e.res=_semver2.default.gt(e.toolkit,e.cur)?1:0),e)}function mergeProps(e,r,t){if(e)for(var a in r)if(!t||!t[a]){var l=r[a];e[a]=l}}function upgradePackage(){console.log(_chalk2.default.green("升级 package.json"));var e={},r=_path2.default.join(curDir,"package.json");_fsExtra2.default.existsSync(r)&&(e=JSON.parse(_fsExtra2.default.readFileSync(r).toString()));var t={},a=_path2.default.join(toolkitDir,"templates/project/package.json");_fsExtra2.default.existsSync(a)&&(t=JSON.parse(_fsExtra2.default.readFileSync(a).toString())),e.subversion=e.subversion||{},mergeProps(e.subversion,t.subversion),e.scripts=e.scripts||{},mergeProps(e.scripts,t.scripts),e.dependencies=e.dependencies||{},mergeProps(e.dependencies,t.dependencies),e.devDependencies=e.devDependencies||{},mergeProps(e.devDependencies,t.devDependencies),_fsExtra2.default.writeFileSync(r,JSON.stringify(e,null,2))}function copyFiles(e,r){var t=[];(0,_utils.traverseDirSync)(r,t),t.forEach(function(t){var a=_path2.default.relative(r,t),l=_path2.default.join(e,a);console.log(_chalk2.default.green("file: "+l+" copied.")),_fsExtra2.default.copySync(t,l)})}function upgradeSign(){console.log(_chalk2.default.green("升级 签名文件"));var e=_path2.default.join(curDir,"sign/debug");(0,_utils.clearDirSync)(e),(0,_utils.mkdirsSync)(e),copyFiles(e,_path2.default.join(toolkitDir,"templates/project/sign/debug"))}function upgradeTools(){console.log(_chalk2.default.green("升级 mix-tools 目录"));var e=_path2.default.join(curDir,"node_modules/mix-tools");(0,_utils.clearDirSync)(e),(0,_utils.mkdirsSync)(e),copyFiles(e,_path2.default.join(toolkitDir,"templates/project/modules/mix-tools"));var r=_path2.default.join(toolkitDir,"templates/project",".eslintrc.json"),t=_path2.default.join(curDir,".eslintrc.json");_fsExtra2.default.copySync(r,t),checkBabelrcConfig()}function checkBabelrcConfig(){var e=_path2.default.join(toolkitDir,"templates","project",".babelrc"),r=_path2.default.join(curDir,".babelrc");if(!_fsExtra2.default.existsSync(r))return console.log(_chalk2.default.yellow("### App Toolkit ### 开发者工程目录中没有.babelrc文件， 拷贝更新的mix-tools的.babelrc文件至开发者工程中")),void _fsExtra2.default.copySync(e,r);var t=JSON.parse(_fsExtra2.default.readFileSync(r)),a=JSON.parse(_fsExtra2.default.readFileSync(e));try{(0,_assert.deepEqual)(t,a)}catch(e){var l=(0,_utils.formatDate)("yyyyMMdd_hhmmss",new Date),o=_path2.default.join(curDir,".babelrc.old."+l),i=_path2.default.join(curDir,".babelrc.new."+l);_fsExtra2.default.writeFileSync(o,JSON.stringify(t,null,2)),_fsExtra2.default.writeFileSync(i,JSON.stringify(a,null,2)),console.log(_chalk2.default.yellow("### App Toolkit ### 开发者工程的.babelrc和即将更新的.babelrc不一致， 生成以下备份文件")),console.log(_chalk2.default.yellow("### App Toolkit ### 开发者现有.babelrc的备份文件保存为: "+o)),console.log(_chalk2.default.yellow("### App Toolkit ### 更新的mix-tools的.babelrc的备份文件保存为: "+i)),mergeProps(a,t),_fsExtra2.default.writeFileSync(_path2.default.join(curDir,".babelrc"),JSON.stringify(a,null,2)),console.log(_chalk2.default.yellow("### App Toolkit ### 合并更新的mix-tools的.babelrc文件与开发者工程的.babelrc文件。请开发者在验证能够正常编译工程之后，手动删除babelrc的备份文件"))}}function updateProject(){var e=checkVersion();if(force)console.log(_chalk2.default.yellow("强制升级工程( "+e.cur+" ----\x3e "+e.toolkit+" )(可能会出现兼容性问题)"));else{if(e.res<0||0===e.res&&!force)return void(0===e.res&&console.log("### App Toolkit ### 版本已经是最新版本"));console.log(_chalk2.default.green("升级工程( "+e.cur+" ----\x3e "+e.toolkit+" )"))}upgradePackage(),upgradeSign(),upgradeTools(),console.log(_chalk2.default.green("升级完毕, 请运行npm install更新依赖包"))}var _assert=require("assert"),_path=require("path"),_path2=_interopRequireDefault(_path),_fsExtra=require("fs-extra"),_fsExtra2=_interopRequireDefault(_fsExtra),_yargs=require("yargs"),_yargs2=_interopRequireDefault(_yargs),_chalk=require("chalk"),_chalk2=_interopRequireDefault(_chalk),_semver=require("semver"),_semver2=_interopRequireDefault(_semver),_utils=require("./utils"),argv=_yargs2.default.argv,force=void 0!==argv.force,curDir=process.cwd(),toolkitDir=_path2.default.join(__dirname,"../../");updateProject();